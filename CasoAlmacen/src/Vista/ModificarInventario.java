/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vista;

import Modelo.CRUD_Inventario;
import javax.swing.JOptionPane;

/**
 *
 * @author linco
 */
public class ModificarInventario extends javax.swing.JFrame {

    /**
     * Creates new form InventarioInsertar
     */
    public ModificarInventario() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabelID = new javax.swing.JLabel();
        jLabelNombre = new javax.swing.JLabel();
        jLabelStock = new javax.swing.JLabel();
        jLabelPriceUnidad = new javax.swing.JLabel();
        jLabelCategoria = new javax.swing.JLabel();
        jComboBoxCategorias = new javax.swing.JComboBox<>();
        jTextStock = new javax.swing.JTextField();
        jTextNombre = new javax.swing.JTextField();
        jTextPrecioUnid = new javax.swing.JTextField();
        jTextCategoria = new javax.swing.JTextField();
        jTextID = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaMostrar = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jButtonExportar = new javax.swing.JButton();
        jButtonEliminar = new javax.swing.JButton();
        jButtonLimpiar = new javax.swing.JButton();
        jButtonActualizar = new javax.swing.JButton();
        jButtonGuardar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButtonRegresar = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jButtonAñadir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setFocusCycleRoot(false);
        setSize(new java.awt.Dimension(0, 0));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Selecciona una tabla a mostrar");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabelID.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabelID.setText("ID");
        jLabelID.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLabelID.setFocusCycleRoot(true);
        jLabelID.setFocusable(false);
        jLabelID.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabelNombre.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabelNombre.setText("Nombre");
        jLabelNombre.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabelStock.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabelStock.setText("Stock");
        jLabelStock.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabelPriceUnidad.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabelPriceUnidad.setText("Precio/Unidad");
        jLabelPriceUnidad.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabelCategoria.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabelCategoria.setText("Categoria");
        jLabelCategoria.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jComboBoxCategorias.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Seleccionar Tabla--", "Ropa", "Alimentos", "Deporte", "Tecnologia", "Limpieza" }));
        jComboBoxCategorias.setToolTipText("Selecciona una categoría para mostrar su tabla");
        jComboBoxCategorias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxCategoriasActionPerformed(evt);
            }
        });

        jTextStock.setEditable(false);
        jTextStock.setEnabled(false);
        jTextStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextStockActionPerformed(evt);
            }
        });

        jTextNombre.setEditable(false);
        jTextNombre.setEnabled(false);
        jTextNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextNombreActionPerformed(evt);
            }
        });

        jTextPrecioUnid.setEditable(false);
        jTextPrecioUnid.setEnabled(false);
        jTextPrecioUnid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextPrecioUnidActionPerformed(evt);
            }
        });

        jTextCategoria.setEditable(false);
        jTextCategoria.setEnabled(false);

        jTextID.setEditable(false);
        jTextID.setEnabled(false);
        jTextID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextIDActionPerformed(evt);
            }
        });

        TablaMostrar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        TablaMostrar.setEnabled(false);
        TablaMostrar.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                TablaMostrarAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        TablaMostrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaMostrarMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TablaMostrar);

        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jButtonExportar.setText("Exportar");
        jButtonExportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExportarActionPerformed(evt);
            }
        });

        jButtonEliminar.setText("Eliminar");
        jButtonEliminar.setEnabled(false);
        jButtonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarActionPerformed(evt);
            }
        });

        jButtonLimpiar.setText("Limpiar");
        jButtonLimpiar.setEnabled(false);
        jButtonLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimpiarActionPerformed(evt);
            }
        });

        jButtonActualizar.setText("Actualizar");
        jButtonActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonActualizarActionPerformed(evt);
            }
        });

        jButtonGuardar.setText("Guardar");
        jButtonGuardar.setEnabled(false);
        jButtonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGuardarActionPerformed(evt);
            }
        });

        jLabel2.setText("Operaciones");

        jLabel3.setText("Salida");

        jButtonRegresar.setText("Regresar");
        jButtonRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRegresarActionPerformed(evt);
            }
        });

        jButtonAñadir.setText("Añadir");
        jButtonAñadir.setEnabled(false);
        jButtonAñadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAñadirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonActualizar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                    .addComponent(jButtonGuardar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonLimpiar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonRegresar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonAñadir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator1)
                    .addComponent(jButtonExportar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonAñadir, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonExportar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonRegresar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(33, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 694, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jComboBoxCategorias, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabelNombre)
                                    .addComponent(jLabelID)
                                    .addComponent(jLabelStock)
                                    .addComponent(jLabelPriceUnidad))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextPrecioUnid, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextID, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextStock, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabelCategoria)
                                .addGap(18, 18, 18)
                                .addComponent(jTextCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelID)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelNombre))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelStock)
                    .addComponent(jComboBoxCategorias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextPrecioUnid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelPriceUnidad))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelCategoria))
                .addGap(18, 24, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(64, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(927, 504));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextNombreActionPerformed

    private void jTextStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextStockActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextStockActionPerformed

    private void jButtonRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRegresarActionPerformed
        VentanaPrincipal ventana = new VentanaPrincipal();
        ventana.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButtonRegresarActionPerformed

    private void TablaMostrarAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_TablaMostrarAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_TablaMostrarAncestorAdded

    private void TablaMostrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaMostrarMouseClicked
        CRUD_Inventario tb = new CRUD_Inventario();
        tb.SeleccionarElemento(TablaMostrar, jTextID, jTextNombre, jTextStock, jTextPrecioUnid, jTextCategoria);
    }//GEN-LAST:event_TablaMostrarMouseClicked

    private void jTextPrecioUnidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextPrecioUnidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextPrecioUnidActionPerformed

    private void jTextIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextIDActionPerformed

    private void jComboBoxCategoriasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxCategoriasActionPerformed
        String opcionSeleccionada = jComboBoxCategorias.getSelectedItem().toString();
        CRUD_Inventario tb = new CRUD_Inventario();
        switch (opcionSeleccionada) {
            case "--Seleccionar Tabla--":
                JOptionPane.showMessageDialog(null, "Por favor selecciona una categoría válida");
                break;
            case "Ropa":
                tb.mostrarTablaRopa(TablaMostrar);
                break;
            case "Alimentos":
                tb.mostrarTablaAlimentos(TablaMostrar);
                break;
            case "Deporte":
                tb.mostrarTablaDeporte(TablaMostrar);
                break;
            case "Tecnologia":
                tb.mostrarTablaElectronico(TablaMostrar);
                break;
            case "Limpieza":
                tb.mostrarTablaLimpieza(TablaMostrar);
                break;
            default:
                JOptionPane.showMessageDialog(null, "Categoría no reconocida");
        }
    }//GEN-LAST:event_jComboBoxCategoriasActionPerformed

    private void jButtonActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonActualizarActionPerformed
        TablaMostrar.setEnabled(true);
        jTextID.setEditable(true);
        jTextID.setEnabled(true);
        jTextNombre.setEditable(true);
        jTextNombre.setEnabled(true);
        jTextStock.setEditable(true);
        jTextStock.setEnabled(true);
        jTextPrecioUnid.setEditable(true);
        jTextPrecioUnid.setEnabled(true);
        jTextCategoria.setEditable(true);
        jTextCategoria.setEnabled(true);
        jButtonLimpiar.setEnabled(true);
        jButtonEliminar.setEnabled(true);
        jButtonGuardar.setEnabled(true);
        jButtonAñadir.setEnabled(true);
    }//GEN-LAST:event_jButtonActualizarActionPerformed

    private void jButtonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarActionPerformed
        CRUD_Inventario tb = new CRUD_Inventario();

        String tablaSeleccionada = jComboBoxCategorias.getSelectedItem().toString();

        if (tablaSeleccionada.equals("--Seleccionar Tabla--")) {
            JOptionPane.showMessageDialog(null, "⚠️ Selecciona una tabla válida primero.");
            return;
        }

        boolean seElimino;
        seElimino = tb.EliminarRegistro(tablaSeleccionada, jTextID);

        if (seElimino) {
            // Refrescar tabla según categoría
            switch (tablaSeleccionada) {
                case "Ropa":
                    tb.mostrarTablaRopa(TablaMostrar);
                    break;
                case "Alimentos":
                    tb.mostrarTablaAlimentos(TablaMostrar);
                    break;
                case "Deporte":
                    tb.mostrarTablaDeporte(TablaMostrar);
                    break;
                case "Tecnologia":
                    tb.mostrarTablaElectronico(TablaMostrar);
                    break;
                case "Limpieza":
                    tb.mostrarTablaLimpieza(TablaMostrar);
                    break;
                default:
                    JOptionPane.showMessageDialog(null, "Categoría no reconocida");
            }
        }
        // Limpiar celdas al finalizar guardado
        jTextID.setText("");
        jTextNombre.setText("");
        jTextStock.setText("");
        jTextPrecioUnid.setText("");
        jTextCategoria.setText("");

        // Desactivar campos
        TablaMostrar.setEnabled(false);
        TablaMostrar.clearSelection();
        jTextID.setEditable(false);
        jTextID.setEnabled(false);
        jTextNombre.setEditable(false);
        jTextNombre.setEnabled(false);
        jTextStock.setEditable(false);
        jTextStock.setEnabled(false);
        jTextPrecioUnid.setEditable(false);
        jTextPrecioUnid.setEnabled(false);
        jTextCategoria.setEditable(false);
        jTextCategoria.setEnabled(false);
        jButtonLimpiar.setEnabled(false);
        jButtonEliminar.setEnabled(false);
        jButtonGuardar.setEnabled(false);
    }//GEN-LAST:event_jButtonEliminarActionPerformed

    private void jButtonExportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExportarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonExportarActionPerformed

    private void jButtonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGuardarActionPerformed
        CRUD_Inventario tb = new CRUD_Inventario();

        String tablaSeleccionada = jComboBoxCategorias.getSelectedItem().toString();

        if (tablaSeleccionada.equals("--Seleccionar Tabla--")) {
            JOptionPane.showMessageDialog(null, "⚠️ Selecciona una tabla válida primero.");
            return;
        }

        boolean seGuardo;
        seGuardo = tb.actualizarRegistro(tablaSeleccionada, jTextID, jTextNombre, jTextStock, jTextPrecioUnid, jTextCategoria);

        if (seGuardo) {
            // Refrescar tabla según categoría
            switch (tablaSeleccionada) {
                case "Ropa":
                    tb.mostrarTablaRopa(TablaMostrar);
                    break;
                case "Alimentos":
                    tb.mostrarTablaAlimentos(TablaMostrar);
                    break;
                case "Deporte":
                    tb.mostrarTablaDeporte(TablaMostrar);
                    break;
                case "Tecnologia":
                    tb.mostrarTablaElectronico(TablaMostrar);
                    break;
                case "Limpieza":
                    tb.mostrarTablaLimpieza(TablaMostrar);
                    break;
                default:
                    JOptionPane.showMessageDialog(null, "Categoría no reconocida");
            }
        }
        // Limpiar celdas al finalizar guardado
        jTextID.setText("");
        jTextNombre.setText("");
        jTextStock.setText("");
        jTextPrecioUnid.setText("");
        jTextCategoria.setText("");

        // Desactivar campos
        TablaMostrar.setEnabled(false);
        TablaMostrar.clearSelection();
        jTextID.setEditable(false);
        jTextID.setEnabled(false);
        jTextNombre.setEditable(false);
        jTextNombre.setEnabled(false);
        jTextStock.setEditable(false);
        jTextStock.setEnabled(false);
        jTextPrecioUnid.setEditable(false);
        jTextPrecioUnid.setEnabled(false);
        jTextCategoria.setEditable(false);
        jTextCategoria.setEnabled(false);
        jButtonLimpiar.setEnabled(false);
        jButtonEliminar.setEnabled(false);
        jButtonGuardar.setEnabled(false);
    }//GEN-LAST:event_jButtonGuardarActionPerformed

    private void jButtonLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimpiarActionPerformed
        jTextID.setText("");
        jTextNombre.setText("");
        jTextStock.setText("");
        jTextPrecioUnid.setText("");
        jTextCategoria.setText("");
    }//GEN-LAST:event_jButtonLimpiarActionPerformed

    private void jButtonAñadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAñadirActionPerformed
        CRUD_Inventario tb = new CRUD_Inventario();

        String tablaSeleccionada = jComboBoxCategorias.getSelectedItem().toString();

        if (tablaSeleccionada.equals("--Seleccionar Tabla--")) {
            JOptionPane.showMessageDialog(null, "⚠️ Selecciona una tabla válida primero.");
            return;
        }

        tb.InsertarRegistro(tablaSeleccionada, jTextID, jTextNombre, jTextStock, jTextPrecioUnid, jTextCategoria);
        switch (tablaSeleccionada) {
            case "Ropa":
                tb.mostrarTablaRopa(TablaMostrar);
                break;
            case "Alimentos":
                tb.mostrarTablaAlimentos(TablaMostrar);
                break;
            case "Deporte":
                tb.mostrarTablaDeporte(TablaMostrar);
                break;
            case "Tecnologia":
                tb.mostrarTablaElectronico(TablaMostrar);
                break;
            case "Limpieza":
                tb.mostrarTablaLimpieza(TablaMostrar);
                break;
            default:
                JOptionPane.showMessageDialog(null, "Categoría no reconocida");
        }
    }//GEN-LAST:event_jButtonAñadirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ModificarInventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ModificarInventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ModificarInventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ModificarInventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new ModificarInventario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TablaMostrar;
    private javax.swing.JButton jButtonActualizar;
    private javax.swing.JButton jButtonAñadir;
    private javax.swing.JButton jButtonEliminar;
    private javax.swing.JButton jButtonExportar;
    private javax.swing.JButton jButtonGuardar;
    private javax.swing.JButton jButtonLimpiar;
    private javax.swing.JButton jButtonRegresar;
    private javax.swing.JComboBox<String> jComboBoxCategorias;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelCategoria;
    private javax.swing.JLabel jLabelID;
    private javax.swing.JLabel jLabelNombre;
    private javax.swing.JLabel jLabelPriceUnidad;
    private javax.swing.JLabel jLabelStock;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextCategoria;
    private javax.swing.JTextField jTextID;
    private javax.swing.JTextField jTextNombre;
    private javax.swing.JTextField jTextPrecioUnid;
    private javax.swing.JTextField jTextStock;
    // End of variables declaration//GEN-END:variables
}
